(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{469:function(s,t,a){"use strict";a.r(t);var n=a(0),r=Object(n.a)({},function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"javascript高级程序设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript高级程序设计","aria-hidden":"true"}},[s._v("#")]),s._v(" Javascript高级程序设计")]),s._v(" "),a("h2",{attrs:{id:"基本概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本概念","aria-hidden":"true"}},[s._v("#")]),s._v(" 基本概念")]),s._v(" "),a("h3",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型","aria-hidden":"true"}},[s._v("#")]),s._v(" 数据类型")]),s._v(" "),a("h4",{attrs:{id:"number-数值转换规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#number-数值转换规则","aria-hidden":"true"}},[s._v("#")]),s._v(" Number() 数值转换规则")]),s._v(" "),a("ul",[a("li",[s._v("如果是Boolean值，true => 1; false => 0;")]),s._v(" "),a("li",[s._v("如果是数值，直接返回，不做任何处理")]),s._v(" "),a("li",[s._v("如果是null, null => 0;")]),s._v(" "),a("li",[s._v("undefined => NaN;")]),s._v(" "),a("li",[s._v("如果是字符串：\n"),a("ul",[a("li",[s._v("字符串只包含数字（正负号的情况），转换成数字，0开头的会忽略。 '123' => 123; '0456' => 456;")]),s._v(" "),a("li",[s._v("字符串包含浮点格式，'3.3' => 3.3; '05.5' => 5.5; '-1.2' => 1.2;")]),s._v(" "),a("li",[s._v("如果字符串包含16进制格式，带有'0xf'字符转换成对应的十进制整数;")]),s._v(" "),a("li",[s._v("如果字符串是空，'' => 0; \"\" => 0;")]),s._v(" "),a("li",[s._v("除上述情况以外，都是NaN;")])])]),s._v(" "),a("li",[s._v("如果是对象，则调用"),a("code",[s._v("valueOf()")]),s._v("方法，按照上面的规则转换，如果返回了NaN的话，则调用"),a("code",[s._v("toString()")]),s._v("方法，再依次按照前面的规则转换。")])]),s._v(" "),a("h4",{attrs:{id:"parseint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parseint","aria-hidden":"true"}},[s._v("#")]),s._v(" parseInt()")]),s._v(" "),a("ul",[a("li",[s._v("空字符串 => NaN")]),s._v(" "),a("li",[s._v("字符串数字 => 忽略字符，连续的字符串数字，一旦出现非数字，则停止")]),s._v(" "),a("li",[s._v("字符串小数点 => 忽略点后面的数字")]),s._v(" "),a("li",[s._v('"0"开头且后面跟的是数字 => 八进制解析')]),s._v(" "),a("li",[s._v('"0x"开头且后面跟的是数字 => 十六进制')])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" n1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// NaN")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" n2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123abc456'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 123")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" n3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'11.3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 11")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" n4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'70'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 70(十进制)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" n5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'070'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 56(八进制)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" n6 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0xf'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 15(十六进制)")]),s._v("\n")])])]),a("p",[s._v('如果指定第二个参数的话，字符串可以不带"0x"')]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" n1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ab'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 171")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" n2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" n2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'100'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 8")]),s._v("\n")])])]),a("blockquote",[a("p",[s._v("如果不指定"),a("code",[s._v("parseInt()")]),s._v("的第二个参数，默认情况下以10进制转换, 为了避免错误解析，建议任何时候都指定第二个参数")])]),s._v(" "),a("h4",{attrs:{id:"parsefloat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parsefloat","aria-hidden":"true"}},[s._v("#")]),s._v(" parseFloat()")]),s._v(" "),a("p",[a("code",[s._v("parseFloat")]),s._v(" 与 "),a("code",[s._v("parseInt")]),s._v("一样，将字符串解析成数字，区别在于：")]),s._v(" "),a("ul",[a("li",[s._v("在解析浮点数时，只有第一个点有效，后面的会直接忽略")]),s._v(" "),a("li",[s._v("忽略前导零")]),s._v(" "),a("li",[s._v("没有第二个参数")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" n1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// NaN")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" n2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123abc456'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 123")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" n3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'11.3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 11.3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" n4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'22.2.3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 22.3")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" n5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'070.2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 70.2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" n6 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0xf'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" n7 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3.25e5'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 325000")]),s._v("\n")])])]),a("h4",{attrs:{id:"string-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-类型","aria-hidden":"true"}},[s._v("#")]),s._v(" String 类型")]),s._v(" "),a("p",[a("strong",[s._v("1. 字符串字面量")]),s._v("\nString数据类型包含一些特殊的字符串字面量，也叫转义字符")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("\\n  换行\n\\t  制表\n\\b  空格\n\\r  回车\n\\f  进纸\n\\\\  斜杠\n\\"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  单引号（'")]),s._v("），在单引号表示的字符串中使用。e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello \\'world\\''")]),s._v("\n\\"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"  双引号（"')]),s._v("），在双引号表示的字符串中使用。e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello \\"world\\""')]),s._v("\n\\xnn 以十六进制代码nn表示一个字符\n\\unnnn 以十六进制代码nnnn表示一个Unicode字符\n")])])]),a("p",[a("strong",[s._v("2. 字符串的特点")]),s._v("\n字符串是不可变的，一但创建，它们的值就不能在改变。")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" hi "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建字符串'hello'")]),s._v("\nhi "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hi "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'world'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 重新定义字符串'hello world'，之前的hello将被销毁掉")]),s._v("\n")])])]),a("p",[a("strong",[s._v("3. 转换字符串")]),s._v("\n把一个值转换成一个字符串的两种方式")]),s._v(" "),a("p",[s._v("数值，布尔值、对象和字符串都有toString()方法，该方法返回字符串副标，null 和 undefined没有")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\nnum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// '10'")]),s._v("\nnum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// '1010'")]),s._v("\nnum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// '12'")]),s._v("\nnum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// '10'")]),s._v("\nnum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 'a'")]),s._v("\n")])])]),a("p",[s._v("String()方法\n在不知道要转换的类型是不是null 或 undefined 的情况下，可以使用String()，这个函数能够将任何类型的值转换为字符串")]),s._v(" "),a("ul",[a("li",[s._v("如果值有toString()方法，则调用该方法（没有参数）并返回相应的结果")]),s._v(" "),a("li",[s._v("如果值是 null，返回 ‘null’")]),s._v(" "),a("li",[s._v("如果值是 undefined, 返回 ‘undefined’")])]),s._v(" "),a("h4",{attrs:{id:"object-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#object-类型","aria-hidden":"true"}},[s._v("#")]),s._v(" Object 类型")]),s._v(" "),a("p",[a("strong",[s._v("constructor")]),s._v("\n保存着用于创建当前对象的函数")]),s._v(" "),a("p",[a("strong",[s._v("hasOwnProperty(propertyName)")]),s._v("\n用户检查给定的属性在当前对象实例中（而不是在实例的原型中）")]),s._v(" "),a("p",[a("strong",[s._v("isPropertyOf(object)")]),s._v("\n检查传入的对象是否是传入对象的原型")]),s._v(" "),a("h3",{attrs:{id:"操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作符","aria-hidden":"true"}},[s._v("#")]),s._v(" 操作符")]),s._v(" "),a("p",[s._v("操作符应用在对象的时候，先调用对象的 "),a("code",[s._v("valueOf()")]),s._v(" 或 "),a("code",[s._v("toString()")]),s._v(" 方法取值")]),s._v(" "),a("h4",{attrs:{id:"一元操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一元操作符","aria-hidden":"true"}},[s._v("#")]),s._v(" 一元操作符")]),s._v(" "),a("p",[a("strong",[s._v("递增和递减操作符")])]),s._v(" "),a("p",[s._v("2种类型，分别为前置和后置。前置递增或递减操作时，变量的值在语句被求值前改变的，这种情况被称为副效应")]),s._v(" "),a("p",[s._v("前置/后置递增和递减操作适用任何类型，对应不同类型做对应的规则处理：")]),s._v(" "),a("ul",[a("li",[s._v("有效数字的字符串，先转换为数字值，再执行加减 1 操作。对应的类型也变为数值类型。")]),s._v(" "),a("li",[s._v("字符串不是有效的数字，返回 NaN，变量类型变为数值类型。")]),s._v(" "),a("li",[s._v("布尔值 false 时，转换为 0 再执行加减 1 操作。类型变成数值。")]),s._v(" "),a("li",[s._v("布尔值 true 时，转换为 1 再执行加减 1 操作。类型变成数值。")]),s._v(" "),a("li",[s._v("如果是对象，先调用对象的 valueOf() 方法，获取对应的值，再按照上面几条规则转换。如果结果是 NaN，则调用 toString() 方法后在按照前面的规则。类型变成数值型。")])]),s._v(" "),a("p",[a("strong",[s._v("一元加减操作符")])]),s._v(" "),a("p",[s._v("一元加减操作符在处理非数值类型时，按照上面的规制转换，转换后类型都是数值型。")]),s._v(" "),a("p",[a("strong",[s._v("位操作符")])]),s._v(" "),a("p",[s._v("负数位操作符的步骤：")]),s._v(" "),a("ol",[a("li",[s._v("求这个数的绝对值的二进制码")]),s._v(" "),a("li",[s._v("求二进制反码，即将0替换成1，将1替换成0")]),s._v(" "),a("li",[s._v("得到的二进制码加1")])]),s._v(" "),a("p",[s._v("求-18的二进制码")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 先求得-18的绝对值 18 的二进制码")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0001")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0010")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 二进制反码，即 0 变 1， 1 变 0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1110")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1101")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 二进制反码加 1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1110")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1101")]),s._v("\n                                      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -------------------------------------")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1111")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1110")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1110")]),s._v("\n")])])]),a("p",[s._v("按位非（NOT) "),a("code",[s._v("~")])]),s._v(" "),a("p",[s._v("25 二进制 0000 0000 0000 0000 0000 0000 0001 1001")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v("num1\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// -26")]),s._v("\n\n")])])]),a("p",[s._v("按位与（AND）"),a("code",[s._v("&")]),s._v("\n两个为1则为1，否则为0")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v(" 二进制 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0001")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1001")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("  二进制 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0011")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("AND")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0001")]),s._v("\n")])])]),a("p",[s._v("按位或（OR）"),a("code",[s._v("|")]),s._v("\n1个为1则为1，否则为0")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("35")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 27")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v(" 二进制 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0001")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1001")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("  二进制 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0011")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("OR")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0001")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1011")]),s._v("\n")])])]),a("p",[s._v("按位异或（XOR）"),a("code",[s._v("^")]),s._v("\n两个相同则为0，否则为1")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("^")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 26")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v(" 二进制 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0001")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1001")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("  二进制 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0011")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XOR")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0001")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1010")]),s._v("\n")])])]),a("p",[s._v("左移 "),a("code",[s._v("<<")])]),s._v(" "),a("blockquote",[a("p",[s._v("左移不会改变操作数的符号")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 二进制码为 10")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 等于二进制码左移5位 1000000, 转换为10进制的 64")]),s._v("\n")])])]),a("p",[s._v("有符号右移 "),a("code",[s._v(">>")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 二进制是1000000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 二进制是 10，即十进制的 2")]),s._v("\n")])])]),a("p",[s._v("无符号右移 "),a("code",[s._v(">>>")]),s._v("\n正数无符号右移与有符号右移相同")]),s._v(" "),a("h4",{attrs:{id:"布尔操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布尔操作符","aria-hidden":"true"}},[s._v("#")]),s._v(" 布尔操作符")]),s._v(" "),a("p",[s._v("1、逻辑非 "),a("code",[s._v("!")])]),s._v(" "),a("ul",[a("li",[s._v("对象 => false")]),s._v(" "),a("li",[s._v("空字符串 => true")]),s._v(" "),a("li",[s._v("非空字符串 => false")]),s._v(" "),a("li",[s._v("0 => true")]),s._v(" "),a("li",[s._v("非0 => false")]),s._v(" "),a("li",[s._v("null => true")]),s._v(" "),a("li",[s._v("NaN => true")]),s._v(" "),a("li",[s._v("undefined => true")])]),s._v(" "),a("p",[s._v("2、逻辑与 "),a("code",[s._v("&&")]),s._v(" true && false")]),s._v(" "),a("ul",[a("li",[s._v("第一个对象 => 后者")]),s._v(" "),a("li",[s._v("两个对象 => 后者")]),s._v(" "),a("li",[s._v("如果有null => null")]),s._v(" "),a("li",[s._v("如果有NaN => NaN")]),s._v(" "),a("li",[s._v("如果有undefined => undefined")])]),s._v(" "),a("p",[s._v("3、逻辑或 "),a("code",[s._v("||")]),s._v(" true || false")]),s._v(" "),a("ul",[a("li",[s._v("第一个是对象 => 返回第一个操作数")]),s._v(" "),a("li",[s._v("第一个为false => 返回第二个操作数")]),s._v(" "),a("li",[s._v("两个对象 => 返回第一个")]),s._v(" "),a("li",[s._v("两个null => null")]),s._v(" "),a("li",[s._v("两个NaN  => NaN")]),s._v(" "),a("li",[s._v("两个undefined => undefined")])]),s._v(" "),a("h4",{attrs:{id:"乘性操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#乘性操作符","aria-hidden":"true"}},[s._v("#")]),s._v(" 乘性操作符")]),s._v(" "),a("p",[s._v("1、乘法 "),a("code",[s._v("*")])]),s._v(" "),a("ul",[a("li",[s._v("两个都是数值，执行常规的乘法计算，如果乘积超出数值表示范围 => Infinity 或 -Infinity")]),s._v(" "),a("li",[s._v("一个NaN => NaN")]),s._v(" "),a("li",[s._v("Infinity 与 0 相乘 => 结果是NaN")]),s._v(" "),a("li",[s._v("Infinity 与 非 0 相乘 => Infinity 或 -Infinity")]),s._v(" "),a("li",[s._v("Infinity 与 Infinity 相乘 => Infinity")]),s._v(" "),a("li",[s._v("如果有一个操作数不是数值，先调用 Number() 隐式转换，然后再应用上面的规则")])]),s._v(" "),a("p",[s._v("2、除法 "),a("code",[s._v("/")])]),s._v(" "),a("ul",[a("li",[s._v("两个都是数值，执行常规的除法计算，如果商超出数值表示范围 => Infinity 或 -Infinity")]),s._v(" "),a("li",[s._v("一个NaN => NaN")]),s._v(" "),a("li",[s._v("Infinity / Infinity => 结果是NaN")]),s._v(" "),a("li",[s._v("0 / 0 => 结果是NaN")]),s._v(" "),a("li",[s._v("0 除以非零的有限数 => Infinity 或 -Infinity")]),s._v(" "),a("li",[s._v("任何数除以 Infinity => Infinity 或 -Infinity")])]),s._v(" "),a("p",[s._v("3、求模 "),a("code",[s._v("%")])]),s._v(" "),a("ul",[a("li",[s._v("两个都是数值，常规除法计算 => 除得的余数")]),s._v(" "),a("li",[s._v("无穷大 % 有限大  => NaN")]),s._v(" "),a("li",[s._v("有限大 % 0 => NaN")]),s._v(" "),a("li",[s._v("Infinity / Infinity => NaN")]),s._v(" "),a("li",[s._v("有限大 % Infinity => 返回自身")]),s._v(" "),a("li",[s._v("0 % 任何数（非0/-0/Infinity/-Infinity）=> 0")]),s._v(" "),a("li",[s._v("如果有一个操作数不是数值，先调用 Number() 隐式转换，然后再应用上面的规则")])]),s._v(" "),a("h4",{attrs:{id:"加性操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#加性操作符","aria-hidden":"true"}},[s._v("#")]),s._v(" 加性操作符")]),s._v(" "),a("p",[s._v("1、加法 "),a("code",[s._v("+")])]),s._v(" "),a("ul",[a("li",[s._v("有NaN => NaN")]),s._v(" "),a("li",[s._v("Infinity + Infinity => Infinity")]),s._v(" "),a("li",[s._v("-Infinity + -Infinity => -Infinity")]),s._v(" "),a("li",[s._v("Infinity + -Infinity => NaN")]),s._v(" "),a("li",[s._v("0 + 0 => 0")]),s._v(" "),a("li",[s._v("-0 + -0 => -0")]),s._v(" "),a("li",[s._v("-0 + 0 => 0")]),s._v(" "),a("li",[s._v("如果有一个数值是字符串，对应下面的规则转换\n"),a("ul",[a("li",[s._v("两个操作数都是字符串，拼接字符串")]),s._v(" "),a("li",[s._v("一个操作数是字符串，另一个也转为字符串，拼接处理")]),s._v(" "),a("li",[s._v("如果有一个是对象，数值、布尔值，则调用它们的 "),a("code",[s._v("toString()")]),s._v(" 方法取得字符串，按照上面的规则处理")]),s._v(" "),a("li",[s._v('undefined => 字符串 "undefined"')]),s._v(" "),a("li",[s._v('null => 字符串 "null"')])])])]),s._v(" "),a("p",[s._v("2、减法 "),a("code",[s._v("+")])]),s._v(" "),a("ul",[a("li",[s._v("两个都是数值，正常减法运算")]),s._v(" "),a("li",[s._v("一个NaN => NaN")]),s._v(" "),a("li",[s._v("Infinity - Infinity => NaN")]),s._v(" "),a("li",[s._v("-Infinity - -Infinity => NaN")]),s._v(" "),a("li",[s._v("Infinity - -Infinity => Infinity")]),s._v(" "),a("li",[s._v("-Infinity - Infinity => -Infinity")]),s._v(" "),a("li",[s._v("0 - 0 => 0")]),s._v(" "),a("li",[s._v("0 - -0 => -0")]),s._v(" "),a("li",[s._v("-0 - -0 => 0")]),s._v(" "),a("li",[s._v("如果有一个操作数是字符串、布尔值、null 或 undefined，则调用 Number() 函数转换为数值，然后按照")])]),s._v(" "),a("h4",{attrs:{id:"关系操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系操作符","aria-hidden":"true"}},[s._v("#")]),s._v(" 关系操作符")]),s._v(" "),a("ul",[a("li",[s._v("两个数值，数值比较大小")]),s._v(" "),a("li",[s._v("两个字符串，比较字符串的字符编码值")]),s._v(" "),a("li",[s._v("一个是数值，则将另一个操作数转换为数值，得到的结果，在按照上面规则比较")]),s._v(" "),a("li",[s._v("一个是对象，调用valueOf()方法，如果没有valueOf()方法，则调用toString()方法，得到的结果再按照上面的规则进行比较")]),s._v(" "),a("li",[s._v("一个布尔值，转换为数值，在比较")])]),s._v(" "),a("h4",{attrs:{id:"相等操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相等操作符","aria-hidden":"true"}},[s._v("#")]),s._v(" 相等操作符")]),s._v(" "),a("p",[s._v("1、 相等和不相等 "),a("code",[s._v("==")]),s._v(" 和 "),a("code",[s._v("!=")])]),s._v(" "),a("ul",[a("li",[s._v("一个是布尔值，false转换0，true 转换为1")]),s._v(" "),a("li",[s._v("一个是字符串，另一个是数值，先将字符串转换为数值")]),s._v(" "),a("li",[s._v("一个是对象，先调用valueOf()方法，的得到的基本类型再按照上面的规则进行比较")])]),s._v(" "),a("p",[s._v("2、 null 和 undefined比较规则")]),s._v(" "),a("ul",[a("li",[s._v("null 和 undefined 是相等的")]),s._v(" "),a("li",[s._v("比较之前，不能进行转换")]),s._v(" "),a("li",[s._v("一个是NaN，相等返回false, 不等返回true")]),s._v(" "),a("li",[s._v("两个NaN， 返回false")]),s._v(" "),a("li",[s._v("两个都是对象，比较是不是同一个对象，如果是true, 反之false")])]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"NaN"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("NaN")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])])]),a("p",[s._v("2、 全等和不全等 "),a("code",[s._v("===")]),s._v(" 和 "),a("code",[s._v("!==")])]),s._v(" "),a("p",[s._v("比较之前不做转换操作，其他规则同相等和不相等")]),s._v(" "),a("h4",{attrs:{id:"条件操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件操作符","aria-hidden":"true"}},[s._v("#")]),s._v(" 条件操作符")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" max "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" num1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" num2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" num1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" num2\n")])])]),a("h4",{attrs:{id:"赋值操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#赋值操作符","aria-hidden":"true"}},[s._v("#")]),s._v(" 赋值操作符")]),s._v(" "),a("ul",[a("li",[s._v("乘/赋值 （*=）")]),s._v(" "),a("li",[s._v("除/赋值 （/=）")]),s._v(" "),a("li",[s._v("模/赋值 （%=）")]),s._v(" "),a("li",[s._v("减/赋值 （+=）")]),s._v(" "),a("li",[s._v("减/赋值 （-=）")]),s._v(" "),a("li",[s._v("左移/赋值 （<<=）")]),s._v(" "),a("li",[s._v("有符号右移/赋值 （>>=）")]),s._v(" "),a("li",[s._v("无符号右移/赋值 （>>>=）")])]),s._v(" "),a("h4",{attrs:{id:"逗号操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逗号操作符","aria-hidden":"true"}},[s._v("#")]),s._v(" 逗号操作符")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" val1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" val2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" valn\n")])])]),a("h3",{attrs:{id:"语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语句","aria-hidden":"true"}},[s._v("#")]),s._v(" 语句")]),s._v(" "),a("h4",{attrs:{id:"if语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if语句","aria-hidden":"true"}},[s._v("#")]),s._v(" if语句")]),s._v(" "),a("p",[s._v("满足条件，执行语句")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// TODO")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h4",{attrs:{id:"do-while语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#do-while语句","aria-hidden":"true"}},[s._v("#")]),s._v(" do-while语句")]),s._v(" "),a("p",[s._v("不管是否满足条件，都会执行1次")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h4",{attrs:{id:"while语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#while语句","aria-hidden":"true"}},[s._v("#")]),s._v(" while语句")]),s._v(" "),a("p",[s._v("满足条件，重复执行语句")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h4",{attrs:{id:"for语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for语句","aria-hidden":"true"}},[s._v("#")]),s._v(" for语句")]),s._v(" "),a("h4",{attrs:{id:"for-in语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-in语句","aria-hidden":"true"}},[s._v("#")]),s._v(" for-in语句")]),s._v(" "),a("p",[s._v("建议在使用for-in循环之前，检查对象是不是null 或 undefined")]),s._v(" "),a("h4",{attrs:{id:"label语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#label语句","aria-hidden":"true"}},[s._v("#")]),s._v(" label语句")]),s._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("mylabel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h4",{attrs:{id:"break和continue语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#break和continue语句","aria-hidden":"true"}},[s._v("#")]),s._v(" break和continue语句")])])},[],!1,null,null,null);t.default=r.exports}}]);